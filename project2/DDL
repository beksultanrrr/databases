
CREATE SCHEMA production;
CREATE SCHEMA sales;

CREATE TABLE production.types  (
	types_id INT PRIMARY KEY,
	types_name VARCHAR (200) NOT NULL,
    subtype_1 varchar(200),
    subtype_2 varchar(200)
);

CREATE TABLE production.brands (
	brand_id INT  PRIMARY KEY,
	brand_name VARCHAR (255) NOT NULL
);

CREATE TABLE production.products (
	product_id INT  PRIMARY KEY,
	product_name VARCHAR (255) NOT NULL,
	brand_id INT NOT NULL,
	type_id INT NOT NULL,
	FOREIGN KEY (type_id) REFERENCES production.types (types_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (brand_id) REFERENCES production.brands (brand_id) ON DELETE CASCADE ON UPDATE CASCADE
);

create table  sales.customers (
	customer_id  INT unique ,
	full_name VARCHAR(50),
	city VARCHAR(50)
);

drop  table sales.employees
CREATE TABLE sales.employees (
	employee_id varchar(255)  PRIMARY KEY,
	full_name varchar (255) NOT NULL,
	phone VARCHAR (25) NOT NULL,
	email VARCHAR (255),
	salary int NOT NULL
);




CREATE TABLE sales.stores (
	store_id INT PRIMARY KEY,
	store_name VARCHAR (255) NOT NULL,
	phone VARCHAR (25),
	street VARCHAR (255),
	city VARCHAR (255)

);


CREATE TABLE sales.vendors(
    vendor_id INT  PRIMARY KEY
);


CREATE TABLE sales.check_store (
    store_id INT NOT NULL,
	product_id INT NOT NULL,
	date timestamp,
	price DECIMAL (10, 2) NOT NULL,
	customer_id INT NOT NULL,
	FOREIGN KEY (product_id) REFERENCES production.products (product_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (store_id) REFERENCES sales.stores ( store_id ) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (customer_id) REFERENCES sales.customers ( customer_id ) ON DELETE CASCADE ON UPDATE CASCADE

);

CREATE TABLE sales.check (
	vendor_id INT,
	product_id INT NOT NULL,
	date timestamp,
	price DECIMAL (10, 2) NOT NULL,
	store_id INT NOT NULL,
	FOREIGN KEY (product_id) REFERENCES production.products (product_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (store_id) REFERENCES sales.stores ( store_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE production.stocks (
	product_id INT NOT NULL ,
	store_id INT NOT NULL ,
	quantity INT NOT NULL ,
	FOREIGN KEY (product_id) REFERENCES production.products (product_id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (store_id) REFERENCES sales.stores (store_id) ON DELETE CASCADE ON UPDATE CASCADE
);

create table sales.website(
    url varchar(1000) PRIMARY KEY,
    customer_id int,
    FOREIGN KEY (customer_id) REFERENCES sales.customers (customer_id) ON DELETE CASCADE ON UPDATE CASCADE
);
